<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="31">
  <CheatEntries>
    <CheatEntry>
      <ID>45</ID>
      <Description>"金币"</Description>
      <VariableType>4 Bytes</VariableType>
      <Address>NieRAutomata.exe+197C4C0</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>46</ID>
      <Description>"经验值(满级99)"</Description>
      <VariableType>4 Bytes</VariableType>
      <Address>NieRAutomata.exe+1984670</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>99</ID>
      <Description>"背包 公式=14194BF60+(材料id*3+C159)*4+8"</Description>
      <Options moManualExpandCollapse="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <Address/>
      <CheatEntries>
        <CheatEntry>
          <ID>102</ID>
          <Description>"复杂的机械"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>14194BF60 + C180 * 4+8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>103</ID>
          <Description>"果实"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>14194BF60 + C183 * 4+8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>106</ID>
          <Description>"铜矿"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>14194BF60 + C189 * 4+8</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>122</ID>
      <Description>"hp"</Description>
      <Options moManualExpandCollapse="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <Address/>
      <CheatEntries>
        <CheatEntry>
          <ID>94</ID>
          <Description>"hp"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>"NieRAutomata.exe"+017C0530</Address>
          <Offsets>
            <Offset>638</Offset>
            <Offset>90</Offset>
            <Offset>248</Offset>
            <Offset>18</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>97</ID>
          <Description>"hpMax"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>"NieRAutomata.exe"+017C0530</Address>
          <Offsets>
            <Offset>-f7d4</Offset>
            <Offset>90</Offset>
            <Offset>248</Offset>
            <Offset>18</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>186</ID>
      <Description>"攻击力"</Description>
      <Options moManualExpandCollapse="1" moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
      <LastState Value="" Activated="1" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>127</ID>
          <Description>"普通攻击"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(attackPower,NieRAutomata.exe,89 88 1C 3B 00 00)
registersymbol(attackPower)

alloc(newmem,$1000,"NieRAutomata.exe"+1FE372)

label(return)

newmem:
  // mov [rax+00003B1C],ecx
  mov [rax+00003B1C],(int)2000000
  jmp return

attackPower:
  jmp newmem
  nop
return:


[DISABLE]

attackPower:
  db 89 88 1C 3B 00 00
unregistersymbol(attackPower)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NieRAutomata.exe"+1FE372

"NieRAutomata.exe"+1FE341: 48 63 F0                    -  movsxd  rsi,eax
"NieRAutomata.exe"+1FE344: 48 6B F6 1C                 -  imul rsi,rsi,1C
"NieRAutomata.exe"+1FE348: 0F 1F 84 00 00 00 00 00     -  nop dword ptr [rax+rax+00000000]
"NieRAutomata.exe"+1FE350: 8B 03                       -  mov eax,[rbx]
"NieRAutomata.exe"+1FE352: 48 8D 8C 24 F0 00 00 00     -  lea rcx,[rsp+000000F0]
"NieRAutomata.exe"+1FE35A: 89 84 24 F0 00 00 00        -  mov [rsp+000000F0],eax
"NieRAutomata.exe"+1FE361: E8 BA 51 07 00              -  call NieRAutomata.exe+273520
"NieRAutomata.exe"+1FE366: 48 85 C0                    -  test rax,rax
"NieRAutomata.exe"+1FE369: 74 0D                       -  je NieRAutomata.exe+1FE378
"NieRAutomata.exe"+1FE36B: 8B 8C 2E A0 20 00 00        -  mov ecx,[rsi+rbp+000020A0]
// ---------- INJECTING HERE ----------
"NieRAutomata.exe"+1FE372: 89 88 1C 3B 00 00           -  mov [rax+00003B1C],ecx
// ---------- DONE INJECTING  ----------
"NieRAutomata.exe"+1FE378: 48 83 C3 04                 -  add rbx,04
"NieRAutomata.exe"+1FE37C: 48 FF CF                    -  dec rdi
"NieRAutomata.exe"+1FE37F: 75 CF                       -  jne NieRAutomata.exe+1FE350
"NieRAutomata.exe"+1FE381: 8B BD 20 08 01 00           -  mov edi,[rbp+00010820]
"NieRAutomata.exe"+1FE387: 8B CF                       -  mov ecx,edi
"NieRAutomata.exe"+1FE389: 85 FF                       -  test edi,edi
"NieRAutomata.exe"+1FE38B: 74 14                       -  je NieRAutomata.exe+1FE3A1
"NieRAutomata.exe"+1FE38D: FF C9                       -  dec ecx
"NieRAutomata.exe"+1FE38F: 74 09                       -  je NieRAutomata.exe+1FE39A
"NieRAutomata.exe"+1FE391: FF C9                       -  dec ecx
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>185</ID>
          <Description>"射击攻击"</Description>
          <Color>000000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>NieRAutomata.exe+1418D5C</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>192</ID>
          <Description>"普通攻击力2"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(gjlINJECT,NieRAutomata.exe,89 88 1C 3B 00 00)
alloc(newmem,$1000,"NieRAutomata.exe"+1FE372)

label(code)
label(return)

newmem:

code:
  // mov [rax+00003B1C],ecx
  mov [rax+00003B1C],(int)9999999
  jmp return

gjlINJECT:
  jmp newmem
  nop
return:
registersymbol(gjlINJECT)

[DISABLE]

gjlINJECT:
  db 89 88 1C 3B 00 00

unregistersymbol(gjlINJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NieRAutomata.exe"+1FE372

"NieRAutomata.exe"+1FE341: 48 63 F0                    -  movsxd  rsi,eax
"NieRAutomata.exe"+1FE344: 48 6B F6 1C                 -  imul rsi,rsi,1C
"NieRAutomata.exe"+1FE348: 0F 1F 84 00 00 00 00 00     -  nop dword ptr [rax+rax+00000000]
"NieRAutomata.exe"+1FE350: 8B 03                       -  mov eax,[rbx]
"NieRAutomata.exe"+1FE352: 48 8D 8C 24 F0 00 00 00     -  lea rcx,[rsp+000000F0]
"NieRAutomata.exe"+1FE35A: 89 84 24 F0 00 00 00        -  mov [rsp+000000F0],eax
"NieRAutomata.exe"+1FE361: E8 BA 51 07 00              -  call NieRAutomata.exe+273520
"NieRAutomata.exe"+1FE366: 48 85 C0                    -  test rax,rax
"NieRAutomata.exe"+1FE369: 74 0D                       -  je NieRAutomata.exe+1FE378
"NieRAutomata.exe"+1FE36B: 8B 8C 2E A0 20 00 00        -  mov ecx,[rsi+rbp+000020A0]
// ---------- INJECTING HERE ----------
"NieRAutomata.exe"+1FE372: 89 88 1C 3B 00 00           -  mov [rax+00003B1C],ecx
// ---------- DONE INJECTING  ----------
"NieRAutomata.exe"+1FE378: 48 83 C3 04                 -  add rbx,04
"NieRAutomata.exe"+1FE37C: 48 FF CF                    -  dec rdi
"NieRAutomata.exe"+1FE37F: 75 CF                       -  jne NieRAutomata.exe+1FE350
"NieRAutomata.exe"+1FE381: 8B BD 20 08 01 00           -  mov edi,[rbp+00010820]
"NieRAutomata.exe"+1FE387: 8B CF                       -  mov ecx,edi
"NieRAutomata.exe"+1FE389: 85 FF                       -  test edi,edi
"NieRAutomata.exe"+1FE38B: 74 14                       -  je NieRAutomata.exe+1FE3A1
"NieRAutomata.exe"+1FE38D: FF C9                       -  dec ecx
"NieRAutomata.exe"+1FE38F: 74 09                       -  je NieRAutomata.exe+1FE39A
"NieRAutomata.exe"+1FE391: FF C9                       -  dec ecx
}
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>123</ID>
      <Description>"免疫伤害"</Description>
      <Options moManualExpandCollapse="1" moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
      <LastState Value="" Activated="1" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <Address/>
      <CheatEntries>
        <CheatEntry>
          <ID>124</ID>
          <Description>"怪物伤害"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(hurt,NieRAutomata.exe,29 BB 68 06 01 00 8B 83 * * * * 41) // 扫描指定模块的内存
registersymbol(hurt) // 定义符号

alloc(newmem,$1000,"NieRAutomata.exe"+1FA423) // 分配内存

label(return)

newmem:
  // sub [rbx+00010668],edi
  jmp return

hurt:
  jmp newmem
  nop
return:


[DISABLE]

hurt:
  db 29 BB 68 06 01 00

unregistersymbol(hurt) // 清理符号
dealloc(newmem) // 清理内存

{
// ORIGINAL CODE - INJECTION POINT: "NieRAutomata.exe"+1FA423

"NieRAutomata.exe"+1FA402: 48 8B 03                       -  mov rax,[rbx]
"NieRAutomata.exe"+1FA405: 48 8B CB                       -  mov rcx,rbx
"NieRAutomata.exe"+1FA408: FF 90 50 03 00 00              -  call qword ptr [rax+00000350]
"NieRAutomata.exe"+1FA40E: 85 C0                          -  test eax,eax
"NieRAutomata.exe"+1FA410: 74 11                          -  je NieRAutomata.exe+1FA423
"NieRAutomata.exe"+1FA412: 85 FF                          -  test edi,edi
"NieRAutomata.exe"+1FA414: 7E 0D                          -  jle NieRAutomata.exe+1FA423
"NieRAutomata.exe"+1FA416: BA 05 00 00 00                 -  mov edx,00000005
"NieRAutomata.exe"+1FA41B: 48 8B CB                       -  mov rcx,rbx
"NieRAutomata.exe"+1FA41E: E8 2D 70 FF FF                 -  call NieRAutomata.exe+1F1450
// ---------- INJECTING HERE ----------
"NieRAutomata.exe"+1FA423: 29 BB 68 06 01 00              -  sub [rbx+00010668],edi
// ---------- DONE INJECTING  ----------
"NieRAutomata.exe"+1FA429: 8B 83 68 06 01 00              -  mov eax,[rbx+00010668]
"NieRAutomata.exe"+1FA42F: 41 0F 48 C5                    -  cmovs eax,r13d
"NieRAutomata.exe"+1FA433: 89 83 68 06 01 00              -  mov [rbx+00010668],eax
"NieRAutomata.exe"+1FA439: 45 85 FF                       -  test r15d,r15d
"NieRAutomata.exe"+1FA43C: 75 12                          -  jne NieRAutomata.exe+1FA450
"NieRAutomata.exe"+1FA43E: 44 39 AB B0 6F 01 00           -  cmp [rbx+00016FB0],r13d
"NieRAutomata.exe"+1FA445: 75 09                          -  jne NieRAutomata.exe+1FA450
"NieRAutomata.exe"+1FA447: 83 BB 7C 74 01 00 01           -  cmp dword ptr [rbx+0001747C],01
"NieRAutomata.exe"+1FA44E: 75 0C                          -  jne NieRAutomata.exe+1FA45C
"NieRAutomata.exe"+1FA450: 41 3B C5                       -  cmp eax,r13d
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>125</ID>
          <Description>"异常伤害 (入侵失败,高处落下,落水)"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(abnormalDamage,NieRAutomata.exe,29 BB 68 06 01 00)
registersymbol(abnormalDamage)

alloc(newmem,$1000,"NieRAutomata.exe"+1FA5B1)

label(return)

newmem:
  // sub [rbx+00010668],edi
  jmp return

abnormalDamage:
  jmp newmem
  nop
return:


[DISABLE]

abnormalDamage:
  db 29 BB 68 06 01 00

unregistersymbol(abnormalDamage)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NieRAutomata.exe"+1FA5B1

"NieRAutomata.exe"+1FA58E: 48 8B 01              -  mov rax,[rcx]
"NieRAutomata.exe"+1FA591: 48 89 6C 24 50        -  mov [rsp+50],rbp
"NieRAutomata.exe"+1FA596: FF 90 50 03 00 00     -  call qword ptr [rax+00000350]
"NieRAutomata.exe"+1FA59C: 85 C0                 -  test eax,eax
"NieRAutomata.exe"+1FA59E: 74 11                 -  je NieRAutomata.exe+1FA5B1
"NieRAutomata.exe"+1FA5A0: 85 FF                 -  test edi,edi
"NieRAutomata.exe"+1FA5A2: 7E 0D                 -  jle NieRAutomata.exe+1FA5B1
"NieRAutomata.exe"+1FA5A4: BA 05 00 00 00        -  mov edx,00000005
"NieRAutomata.exe"+1FA5A9: 48 8B CB              -  mov rcx,rbx
"NieRAutomata.exe"+1FA5AC: E8 9F 6E FF FF        -  call NieRAutomata.exe+1F1450
// ---------- INJECTING HERE ----------
"NieRAutomata.exe"+1FA5B1: 29 BB 68 06 01 00     -  sub [rbx+00010668],edi
// ---------- DONE INJECTING  ----------
"NieRAutomata.exe"+1FA5B7: 8B 83 68 06 01 00     -  mov eax,[rbx+00010668]
"NieRAutomata.exe"+1FA5BD: BD 00 00 00 00        -  mov ebp,00000000
"NieRAutomata.exe"+1FA5C2: 0F 48 C5              -  cmovs eax,ebp
"NieRAutomata.exe"+1FA5C5: 89 83 68 06 01 00     -  mov [rbx+00010668],eax
"NieRAutomata.exe"+1FA5CB: 85 F6                 -  test esi,esi
"NieRAutomata.exe"+1FA5CD: 75 11                 -  jne NieRAutomata.exe+1FA5E0
"NieRAutomata.exe"+1FA5CF: 39 AB B0 6F 01 00     -  cmp [rbx+00016FB0],ebp
"NieRAutomata.exe"+1FA5D5: 75 09                 -  jne NieRAutomata.exe+1FA5E0
"NieRAutomata.exe"+1FA5D7: 83 BB 7C 74 01 00 01  -  cmp dword ptr [rbx+0001747C],01
"NieRAutomata.exe"+1FA5DE: 75 10                 -  jne NieRAutomata.exe+1FA5F0
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>126</ID>
          <Description>"入侵怪物伤害"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(invasionDamage,NieRAutomata.exe,B1 * * * * EB 06 FF 89 DC 28 01 00)
registersymbol(invasionDamage)

alloc(newmem,$1000,"NieRAutomata.exe"+20DB0A)

label(return)

newmem:
  // 字节单位
  // dec [rcx+000128DC]
  jmp return

invasionDamage+07:
  jmp newmem
  nop
return:


[DISABLE]
invasionDamage+07:
  db FF 89 DC 28 01 00

unregistersymbol(invasionDamage)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NieRAutomata.exe"+20DB0A

"NieRAutomata.exe"+20DADE: 48 33 C4                       -  xor rax,rsp
"NieRAutomata.exe"+20DAE1: 48 89 85 80 00 00 00           -  mov [rbp+00000080],rax
"NieRAutomata.exe"+20DAE8: 33 F6                          -  xor esi,esi
"NieRAutomata.exe"+20DAEA: F7 05 A0 80 20 01 00 80 00 00  -  test [NieRAutomata.exe+1415B94],00008000
"NieRAutomata.exe"+20DAF4: 48 8B D9                       -  mov rbx,rcx
"NieRAutomata.exe"+20DAF7: 75 35                          -  jne NieRAutomata.exe+20DB2E
"NieRAutomata.exe"+20DAF9: 83 3D A0 7B 77 01 03           -  cmp dword ptr [NieRAutomata.exe+19856A0],03
"NieRAutomata.exe"+20DB00: 75 08                          -  jne NieRAutomata.exe+20DB0A
"NieRAutomata.exe"+20DB02: 89 B1 DC 28 01 00              -  mov [rcx+000128DC],esi
"NieRAutomata.exe"+20DB08: EB 06                          -  jmp NieRAutomata.exe+20DB10
// ---------- INJECTING HERE ----------
"NieRAutomata.exe"+20DB0A: FF 89 DC 28 01 00              -  dec [rcx+000128DC]
// ---------- DONE INJECTING  ----------
"NieRAutomata.exe"+20DB10: 48 8B 01                       -  mov rax,[rcx]
"NieRAutomata.exe"+20DB13: 48 8D 15 FE CF C4 00           -  lea rdx,[NieRAutomata.exe+E5AB18]
"NieRAutomata.exe"+20DB1A: 45 33 C9                       -  xor r9d,r9d
"NieRAutomata.exe"+20DB1D: 4C 8B C1                       -  mov r8,rcx
"NieRAutomata.exe"+20DB20: 89 74 24 28                    -  mov [rsp+28],esi
"NieRAutomata.exe"+20DB24: 89 74 24 20                    -  mov [rsp+20],esi
"NieRAutomata.exe"+20DB28: FF 90 40 01 00 00              -  call qword ptr [rax+00000140]
"NieRAutomata.exe"+20DB2E: 8B 83 C0 28 01 00              -  mov eax,[rbx+000128C0]
"NieRAutomata.exe"+20DB34: 85 C0                          -  test eax,eax
"NieRAutomata.exe"+20DB36: 74 3C                          -  je NieRAutomata.exe+20DB74
}
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>195</ID>
      <Description>"A2"</Description>
      <Options moManualExpandCollapse="1" moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
      <LastState Value="" Activated="1" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <Address/>
      <CheatEntries>
        <CheatEntry>
          <ID>194</ID>
          <Description>"暴走加血"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>// 开启暴走加hp

[ENABLE]
aobscanmodule(a2_B_add,NieRAutomata.exe,29 8B 68 06 01 00)
alloc(newmem,$1000,"NieRAutomata.exe"+213B9E)


label(return)

newmem:
  // sub [rbx+00010668],ecx
  add [rbx+00010668],ecx
  jmp return

a2_B_add:
  jmp newmem
  nop
return:
registersymbol(a2_B_add)

[DISABLE]

a2_B_add:
  db 29 8B 68 06 01 00

unregistersymbol(a2_B_add)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NieRAutomata.exe"+213B9E

"NieRAutomata.exe"+213B6B: 39 BB C8 0B 00 00              -  cmp [rbx+00000BC8],edi
"NieRAutomata.exe"+213B71: 0F 85 D1 01 00 00              -  jne NieRAutomata.exe+213D48
"NieRAutomata.exe"+213B77: 48 8B 03                       -  mov rax,[rbx]
"NieRAutomata.exe"+213B7A: 48 8B CB                       -  mov rcx,rbx
"NieRAutomata.exe"+213B7D: FF 90 F0 00 00 00              -  call qword ptr [rax+000000F0]
"NieRAutomata.exe"+213B83: 66 0F 6E C0                    -  movd xmm0,eax
"NieRAutomata.exe"+213B87: 0F 5B C0                       -  cvtdq2ps xmm0,xmm0
"NieRAutomata.exe"+213B8A: F3 0F 59 05 CA 47 C9 00        -  mulss xmm0,[NieRAutomata.exe+EA835C]
"NieRAutomata.exe"+213B92: F3 0F 58 05 D6 49 C9 00        -  addss xmm0,[NieRAutomata.exe+EA8570]
"NieRAutomata.exe"+213B9A: F3 0F 2C C8                    -  cvttss2si ecx,xmm0
// ---------- INJECTING HERE ----------
"NieRAutomata.exe"+213B9E: 29 8B 68 06 01 00              -  sub [rbx+00010668],ecx
// ---------- DONE INJECTING  ----------
"NieRAutomata.exe"+213BA4: 39 3D 82 CC 26 01              -  cmp [NieRAutomata.exe+148082C],edi
"NieRAutomata.exe"+213BAA: 74 12                          -  je NieRAutomata.exe+213BBE
"NieRAutomata.exe"+213BAC: 48 8B 05 35 9D 6F 01           -  mov rax,[NieRAutomata.exe+190D8E8]
"NieRAutomata.exe"+213BB3: 48 85 C0                       -  test rax,rax
"NieRAutomata.exe"+213BB6: 74 06                          -  je NieRAutomata.exe+213BBE
"NieRAutomata.exe"+213BB8: 89 88 C0 00 00 00              -  mov [rax+000000C0],ecx
"NieRAutomata.exe"+213BBE: 8B 83 68 06 01 00              -  mov eax,[rbx+00010668]
"NieRAutomata.exe"+213BC4: 89 83 58 08 00 00              -  mov [rbx+00000858],eax
"NieRAutomata.exe"+213BCA: 83 F8 01                       -  cmp eax,01
"NieRAutomata.exe"+213BCD: 0F 8F 75 01 00 00              -  jg NieRAutomata.exe+213D48
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>193</ID>
          <Description>"关闭暴走屏幕抖动"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>// 暴走ui抖动

[ENABLE]
aobscanmodule(a2_B_ui,NieRAutomata.exe,0F 87 F3 01 00 00 C7)
alloc(newmem,$1000,"NieRAutomata.exe"+213B4F)

label(return)

newmem:
  // ja NieRAutomata.exe+213D48
  jmp return

a2_B_ui:
  jmp newmem
  nop
return:
registersymbol(a2_B_ui)

[DISABLE]

a2_B_ui:
  db 0F 87 F3 01 00 00

unregistersymbol(a2_B_ui)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NieRAutomata.exe"+213B4F

"NieRAutomata.exe"+213B15: F3 0F 11 83 A4 2A 01 00        -  movss [rbx+00012AA4],xmm0
"NieRAutomata.exe"+213B1D: EB 06                          -  jmp NieRAutomata.exe+213B25
"NieRAutomata.exe"+213B1F: 89 BB A4 2A 01 00              -  mov [rbx+00012AA4],edi
"NieRAutomata.exe"+213B25: 0F 57 F6                       -  xorps xmm6,xmm6
"NieRAutomata.exe"+213B28: 39 BB B4 2A 01 00              -  cmp [rbx+00012AB4],edi
"NieRAutomata.exe"+213B2E: 0F 84 14 02 00 00              -  je NieRAutomata.exe+213D48
"NieRAutomata.exe"+213B34: F3 0F 10 83 B8 2A 01 00        -  movss xmm0,[rbx+00012AB8]
"NieRAutomata.exe"+213B3C: F3 0F 5C 83 70 14 00 00        -  subss xmm0,[rbx+00001470]
"NieRAutomata.exe"+213B44: 0F 2F C6                       -  comiss xmm0,xmm6
"NieRAutomata.exe"+213B47: F3 0F 11 83 B8 2A 01 00        -  movss [rbx+00012AB8],xmm0
// ---------- INJECTING HERE ----------
"NieRAutomata.exe"+213B4F: 0F 87 F3 01 00 00              -  ja NieRAutomata.exe+213D48
// ---------- DONE INJECTING  ----------
"NieRAutomata.exe"+213B55: C7 83 B8 2A 01 00 00 00 20 41  -  mov [rbx+00012AB8],41200000
"NieRAutomata.exe"+213B5F: 39 BB C4 0B 00 00              -  cmp [rbx+00000BC4],edi
"NieRAutomata.exe"+213B65: 0F 85 DD 01 00 00              -  jne NieRAutomata.exe+213D48
"NieRAutomata.exe"+213B6B: 39 BB C8 0B 00 00              -  cmp [rbx+00000BC8],edi
"NieRAutomata.exe"+213B71: 0F 85 D1 01 00 00              -  jne NieRAutomata.exe+213D48
"NieRAutomata.exe"+213B77: 48 8B 03                       -  mov rax,[rbx]
"NieRAutomata.exe"+213B7A: 48 8B CB                       -  mov rcx,rbx
"NieRAutomata.exe"+213B7D: FF 90 F0 00 00 00              -  call qword ptr [rax+000000F0]
"NieRAutomata.exe"+213B83: 66 0F 6E C0                    -  movd xmm0,eax
"NieRAutomata.exe"+213B87: 0F 5B C0                       -  cvtdq2ps xmm0,xmm0
}
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>204</ID>
      <Description>"入侵小游戏"</Description>
      <Options moManualExpandCollapse="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <Address/>
      <CheatEntries>
        <CheatEntry>
          <ID>203</ID>
          <Description>"攻击秒杀"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(rqmsINJECT,NieRAutomata.exe,41 8B 46 20 29 87 78 35 00 00) // should be unique
alloc(newmem,$1000,"NieRAutomata.exe"+3276AB)

label(return)

newmem:
  // mov eax,[r14+20]
  mov eax,[rdi+00003578]
  sub [rdi+00003578],eax
  jmp return

rqmsINJECT:
  jmp newmem
  nop 5
return:
registersymbol(rqmsINJECT)

[DISABLE]
rqmsINJECT:
  db 41 8B 46 20 29 87 78 35 00 00

unregistersymbol(rqmsINJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NieRAutomata.exe"+3276AB

"NieRAutomata.exe"+32767B: 41 83 7E 04 64                 -  cmp dword ptr [r14+04],64
"NieRAutomata.exe"+327680: 0F 85 71 FF FF FF              -  jne NieRAutomata.exe+3275F7
"NieRAutomata.exe"+327686: 44 39 A7 7C 35 00 00           -  cmp [rdi+0000357C],r12d
"NieRAutomata.exe"+32768D: 74 0C                          -  je NieRAutomata.exe+32769B
"NieRAutomata.exe"+32768F: F7 05 FF E4 0E 01 00 00 00 80  -  test [NieRAutomata.exe+1415B98],80000000
"NieRAutomata.exe"+327699: 75 26                          -  jne NieRAutomata.exe+3276C1
"NieRAutomata.exe"+32769B: 81 FA 28 00 04 00              -  cmp edx,00040028
"NieRAutomata.exe"+3276A1: 75 08                          -  jne NieRAutomata.exe+3276AB
"NieRAutomata.exe"+3276A3: FF 8F 78 35 00 00              -  dec [rdi+00003578]
"NieRAutomata.exe"+3276A9: EB 0A                          -  jmp NieRAutomata.exe+3276B5
// ---------- INJECTING HERE ----------
"NieRAutomata.exe"+3276AB: 41 8B 46 20                    -  mov eax,[r14+20]
"NieRAutomata.exe"+3276AF: 29 87 78 35 00 00              -  sub [rdi+00003578],eax
// ---------- DONE INJECTING  ----------
"NieRAutomata.exe"+3276B5: 8B 87 78 35 00 00              -  mov eax,[rdi+00003578]
"NieRAutomata.exe"+3276BB: 89 87 58 08 00 00              -  mov [rdi+00000858],eax
"NieRAutomata.exe"+3276C1: 44 39 A7 78 35 00 00           -  cmp [rdi+00003578],r12d
"NieRAutomata.exe"+3276C8: 7F 15                          -  jg NieRAutomata.exe+3276DF
"NieRAutomata.exe"+3276CA: 48 8B CF                       -  mov rcx,rdi
"NieRAutomata.exe"+3276CD: E8 EE 12 00 00                 -  call NieRAutomata.exe+3289C0
"NieRAutomata.exe"+3276D2: 85 DB                          -  test ebx,ebx
"NieRAutomata.exe"+3276D4: 0F 85 95 01 00 00              -  jne NieRAutomata.exe+32786F
"NieRAutomata.exe"+3276DA: E9 6C 01 00 00                 -  jmp NieRAutomata.exe+32784B
"NieRAutomata.exe"+3276DF: 85 DB                          -  test ebx,ebx
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>201</ID>
          <Description>"自动秒杀"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>// 入侵直接秒杀敌人，没秒掉手打几下
// 出去记得关掉，不然有些怪也会被秒
[ENABLE]
aobscanmodule(SpikeIntrusion,NieRAutomata.exe,8B 81 58 08 00 00 C3)
alloc(newmem,$1000,"NieRAutomata.exe"+146B30)

label(return)
label(origencode)

newmem:
  pushf
  cmp [rcx+00000568],0x90
  je origencode
  popf
  mov eax,0
  jmp return

origencode:
  popf
  mov eax,[rcx+00000858]
  jmp return

SpikeIntrusion:
  jmp newmem
  nop
return:
registersymbol(SpikeIntrusion)

[DISABLE]
SpikeIntrusion:
  db 8B 81 58 08 00 00

unregistersymbol(SpikeIntrusion)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NieRAutomata.exe"+146B30

"NieRAutomata.exe"+146B26: C3                    -  ret 
"NieRAutomata.exe"+146B27: CC                    -  int 3 
"NieRAutomata.exe"+146B28: CC                    -  int 3 
"NieRAutomata.exe"+146B29: CC                    -  int 3 
"NieRAutomata.exe"+146B2A: CC                    -  int 3 
"NieRAutomata.exe"+146B2B: CC                    -  int 3 
"NieRAutomata.exe"+146B2C: CC                    -  int 3 
"NieRAutomata.exe"+146B2D: CC                    -  int 3 
"NieRAutomata.exe"+146B2E: CC                    -  int 3 
"NieRAutomata.exe"+146B2F: CC                    -  int 3 
// ---------- INJECTING HERE ----------
"NieRAutomata.exe"+146B30: 8B 81 58 08 00 00     -  mov eax,[rcx+00000858]
// ---------- DONE INJECTING  ----------
"NieRAutomata.exe"+146B36: C3                    -  ret 
"NieRAutomata.exe"+146B37: CC                    -  int 3 
"NieRAutomata.exe"+146B38: CC                    -  int 3 
"NieRAutomata.exe"+146B39: CC                    -  int 3 
"NieRAutomata.exe"+146B3A: CC                    -  int 3 
"NieRAutomata.exe"+146B3B: CC                    -  int 3 
"NieRAutomata.exe"+146B3C: CC                    -  int 3 
"NieRAutomata.exe"+146B3D: CC                    -  int 3 
"NieRAutomata.exe"+146B3E: CC                    -  int 3 
"NieRAutomata.exe"+146B3F: CC                    -  int 3 
}
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>205</ID>
      <Description>"材料"</Description>
      <Options moManualExpandCollapse="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <Address/>
      <CheatEntries>
        <CheatEntry>
          <ID>107</ID>
          <Description>"材料变化(99)"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>// 打开背包，将已存在的材料刷为99
[ENABLE]
aobscanmodule(prop,NieRAutomata.exe,83 79 08 00 7E 03)
alloc(newmem,$1000,"NieRAutomata.exe"+5DD57A)

label(code)
label(return)

newmem:
  cmp [rcx+08], (int)99
  jae code
  mov [rcx+08], (int)99
code:
  cmp dword ptr [rcx+08],00
  jle NieRAutomata.exe+5DD583
  jmp return

prop:
  jmp newmem
  nop
return:
registersymbol(prop)

[DISABLE]
prop:
  db 83 79 08 00 7E 03

unregistersymbol(prop)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NieRAutomata.exe"+5DD57A

"NieRAutomata.exe"+5DD55B: 77 06                             -  ja NieRAutomata.exe+5DD563
"NieRAutomata.exe"+5DD55D: 44 0F A3 C3                       -  bt ebx,r8d
"NieRAutomata.exe"+5DD561: 72 20                             -  jb NieRAutomata.exe+5DD583
"NieRAutomata.exe"+5DD563: 3D 9A 01 00 00                    -  cmp eax,0000019A
"NieRAutomata.exe"+5DD568: 74 19                             -  je NieRAutomata.exe+5DD583
"NieRAutomata.exe"+5DD56A: 05 59 FC FF FF                    -  add eax,FFFFFC59
"NieRAutomata.exe"+5DD56F: 83 F8 3B                          -  cmp eax,3B
"NieRAutomata.exe"+5DD572: 77 06                             -  ja NieRAutomata.exe+5DD57A
"NieRAutomata.exe"+5DD574: 48 0F A3 C7                       -  bt rdi,rax
"NieRAutomata.exe"+5DD578: 72 09                             -  jb NieRAutomata.exe+5DD583
// ---------- INJECTING HERE ----------
"NieRAutomata.exe"+5DD57A: 83 79 08 00                       -  cmp dword ptr [rcx+08],00
"NieRAutomata.exe"+5DD57E: 7E 03                             -  jle NieRAutomata.exe+5DD583
// ---------- DONE INJECTING  ----------
"NieRAutomata.exe"+5DD580: 41 FF C2                          -  inc r10d
"NieRAutomata.exe"+5DD583: FF C2                             -  inc edx
"NieRAutomata.exe"+5DD585: 49 83 C1 0C                       -  add r9,0C
"NieRAutomata.exe"+5DD589: 81 FA C8 01 00 00                 -  cmp edx,000001C8
"NieRAutomata.exe"+5DD58F: 0F 8C 7B FF FF FF                 -  jl NieRAutomata.exe+5DD510
"NieRAutomata.exe"+5DD595: 48 8B 5C 24 08                    -  mov rbx,[rsp+08]
"NieRAutomata.exe"+5DD59A: 48 8B 7C 24 10                    -  mov rdi,[rsp+10]
"NieRAutomata.exe"+5DD59F: 41 8B C2                          -  mov eax,r10d
"NieRAutomata.exe"+5DD5A2: C3                                -  ret 
"NieRAutomata.exe"+5DD5A3: CC                                -  int 3 
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>105</ID>
          <Description>"材料上限"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>// 材料上限默认99
define(address,"NieRAutomata.exe"+5DD021)
define(bytes,39 43 08 7E 19)

[ENABLE]
assert(address,bytes)
alloc(newmem,$1000,"NieRAutomata.exe"+5DD021)

label(code)
label(return)

newmem:
  mov eax, (int)99
code:
  cmp [rbx+08],eax
  jle NieRAutomata.exe+5DD03F
  jmp return

address:
  jmp newmem
return:

[DISABLE]
address:
  db bytes
  // cmp [rbx+08],eax
  // jle NieRAutomata.exe+5DD03F

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NieRAutomata.exe"+5DD021

"NieRAutomata.exe"+5DCFFA: 83 78 08 00           -  cmp dword ptr [rax+08],00
"NieRAutomata.exe"+5DCFFE: 7F 19                 -  jg NieRAutomata.exe+5DD019
"NieRAutomata.exe"+5DD000: 48 C7 00 FF FF FF FF  -  mov qword ptr [rax],FFFFFFFFFFFFFFFF
"NieRAutomata.exe"+5DD007: C7 40 08 00 00 00 00  -  mov [rax+08],00000000
"NieRAutomata.exe"+5DD00E: B8 01 00 00 00        -  mov eax,00000001
"NieRAutomata.exe"+5DD013: 48 83 C4 20           -  add rsp,20
"NieRAutomata.exe"+5DD017: 5B                    -  pop rbx
"NieRAutomata.exe"+5DD018: C3                    -  ret 
"NieRAutomata.exe"+5DD019: 41 8B D2              -  mov edx,r10d
"NieRAutomata.exe"+5DD01C: E8 DF 19 00 00        -  call NieRAutomata.exe+5DEA00
// ---------- INJECTING HERE ----------
"NieRAutomata.exe"+5DD021: 39 43 08              -  cmp [rbx+08],eax
"NieRAutomata.exe"+5DD024: 7E 19                 -  jle NieRAutomata.exe+5DD03F
// ---------- DONE INJECTING  ----------
"NieRAutomata.exe"+5DD026: 89 43 08              -  mov [rbx+08],eax
"NieRAutomata.exe"+5DD029: 33 C0                 -  xor eax,eax
"NieRAutomata.exe"+5DD02B: 48 83 C4 20           -  add rsp,20
"NieRAutomata.exe"+5DD02F: 5B                    -  pop rbx
"NieRAutomata.exe"+5DD030: C3                    -  ret 
"NieRAutomata.exe"+5DD031: 45 85 C0              -  test r8d,r8d
"NieRAutomata.exe"+5DD034: 7E F3                 -  jle NieRAutomata.exe+5DD029
"NieRAutomata.exe"+5DD036: E8 15 00 00 00        -  call NieRAutomata.exe+5DD050
"NieRAutomata.exe"+5DD03B: 85 C0                 -  test eax,eax
"NieRAutomata.exe"+5DD03D: 74 EA                 -  je NieRAutomata.exe+5DD029
}
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry Color="20000000">
      <Description>消耗材料</Description>
      <AddressString>NieRAutomata.exe+5DCFF6</AddressString>
      <Before>
        <Byte>48</Byte>
        <Byte>85</Byte>
        <Byte>C0</Byte>
        <Byte>74</Byte>
        <Byte>33</Byte>
      </Before>
      <Actual>
        <Byte>44</Byte>
        <Byte>01</Byte>
        <Byte>40</Byte>
        <Byte>08</Byte>
      </Actual>
      <After>
        <Byte>83</Byte>
        <Byte>78</Byte>
        <Byte>08</Byte>
        <Byte>00</Byte>
        <Byte>7F</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>调用材料函数</Description>
      <AddressString>NieRAutomata.exe+5DC44D</AddressString>
      <Before>
        <Byte>FF</Byte>
        <Byte>E1</Byte>
        <Byte>41</Byte>
        <Byte>8B</Byte>
        <Byte>D2</Byte>
      </Before>
      <Actual>
        <Byte>E8</Byte>
        <Byte>7E</Byte>
        <Byte>0B</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>85</Byte>
        <Byte>C0</Byte>
        <Byte>0F</Byte>
        <Byte>85</Byte>
        <Byte>80</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>read 材料时的指令</Description>
      <AddressString>NieRAutomata.exe+5DD57A</AddressString>
      <Before>
        <Byte>0F</Byte>
        <Byte>A3</Byte>
        <Byte>C7</Byte>
        <Byte>72</Byte>
        <Byte>09</Byte>
      </Before>
      <Actual>
        <Byte>83</Byte>
        <Byte>79</Byte>
        <Byte>08</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>7E</Byte>
        <Byte>03</Byte>
        <Byte>41</Byte>
        <Byte>FF</Byte>
        <Byte>C2</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>拾取材料时</Description>
      <AddressString>NieRAutomata.exe+5DD0F5</AddressString>
      <Before>
        <Byte>B8</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>7B</Byte>
        <Byte>08</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>5C</Byte>
        <Byte>24</Byte>
        <Byte>30</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>买东西，或拾取材料触发</Description>
      <AddressString>NieRAutomata.exe+5DD0D5</AddressString>
      <Before>
        <Byte>83</Byte>
        <Byte>C4</Byte>
        <Byte>20</Byte>
        <Byte>5F</Byte>
        <Byte>C3</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>13</Byte>
      </Actual>
      <After>
        <Byte>E8</Byte>
        <Byte>24</Byte>
        <Byte>18</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>a2 暴走</Description>
      <AddressString>NieRAutomata.exe+213B9E</AddressString>
      <Before>
        <Byte>00</Byte>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>2C</Byte>
        <Byte>C8</Byte>
      </Before>
      <Actual>
        <Byte>29</Byte>
        <Byte>8B</Byte>
        <Byte>68</Byte>
        <Byte>06</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>39</Byte>
        <Byte>3D</Byte>
        <Byte>82</Byte>
        <Byte>CC</Byte>
        <Byte>26</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>a2暴走屏幕抖动</Description>
      <AddressString>NieRAutomata.exe+213B4F</AddressString>
      <Before>
        <Byte>83</Byte>
        <Byte>B8</Byte>
        <Byte>2A</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>0F</Byte>
        <Byte>87</Byte>
        <Byte>F3</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>C7</Byte>
        <Byte>83</Byte>
        <Byte>B8</Byte>
        <Byte>2A</Byte>
        <Byte>01</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>血条读取</Description>
      <AddressString>NieRAutomata.exe+146B30</AddressString>
      <Before>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>81</Byte>
        <Byte>58</Byte>
        <Byte>08</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>C3</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>入侵敌人减血</Description>
      <AddressString>NieRAutomata.exe+3276AF</AddressString>
      <Before>
        <Byte>0A</Byte>
        <Byte>41</Byte>
        <Byte>8B</Byte>
        <Byte>46</Byte>
        <Byte>20</Byte>
      </Before>
      <Actual>
        <Byte>29</Byte>
        <Byte>87</Byte>
        <Byte>78</Byte>
        <Byte>35</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>87</Byte>
        <Byte>78</Byte>
        <Byte>35</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols/>
  <Structures StructVersion="2">
  </Structures>
  <Comments>材料的id大概是从: 0x1-0x1c7，0x1-0xFF
银矿 = 13
金矿 = 44
回复药小 = c
果实 = E
鹿肉 B
铁矿 2
---
  push ecx
  push eax
  push edx
  mov ecx, 0xe
  mov edx, 0x14194BF60
  lea eax, [ecx+ecx*2+0xC159]
  lea eax, [edx+eax*4+08]
  mov [eax], 0x63 // 99
  pop edx
  pop eax
  pop ecx
----
-- 所有背包
_start = 1
_end = 455
for i=_start,_end do
    writeInteger(0x14194BF60+(i*3+0xC159)*4+8, 0x63)
    print(readInteger(0x14194BF60+(i*3+0xC159)*4+8))
end
---
背包id， 1 - 455
lea rdx,[14194BF60]
// rax == 25
lea rax,[rax+rax*2] 
lea rax,[rax+0000C159]
lea rax,[rdx+rax*4]
// rax = 14194BF60 + C1C8 * 4 // 5de9d4
// rax = 14194BF60 + 30720
// rax = 14197C680
// 调用材料函数
mov ecx,[rdx+rax*4+005DC57C]
add rcx,rdx
mov edx,r10d
// 材料函数
edx = 258
14194BF60+(0*3+C159)*4+8 =&gt; 1 4197 C4CC
14194BF60+(1*3+C159)*4+8 =&gt; 1 4197 C4D8
14194BF60+(2*3+C159)*4+8 =&gt; 1 4197 C4E4
14194BF60+(3*3+C159)*4+8 =&gt; 1 4197 C4F0


// 关于hp的调用

168 2 x 3 +
254 0 x 1 + 非战斗状态0
298 0 x 106535... +
2b8 255 x 0 +
2bc 0 x 1 + 非战斗状态0
3c8 2 x 1 +
568 55 x 65 x 114 + ）
67c 0x1 +
684 5 x 3 +
688 5 x 3 +
6c0 11 16 13
760 434 x 433 +
858 &lt;&lt;
888 0 x 262144 +
8cc 0 x 1 +
8d0 0 x 1 +
8d4 0 x 1 +
8d8 0 x 1 +</Comments>
  <LuaScript>_start = 0

-- 455
_end = 1000
for i=_start,_end do
    local address = 0x14194BF60+(i*3+0xC159)*4+8
    -- writeInteger(address, 0x63)
    local num = readInteger(address)
    if num == 0 then
      print(num, address)
    end
end
print("end...")
</LuaScript>
  <DisassemblerComments>
    <DisassemblerComment>
      <Address>"NieRAutomata.exe"+146B30</Address>
      <Comment>所有有血条的都会走这里
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"NieRAutomata.exe"+213B4F</Address>
      <Comment>a2暴走屏幕抖动
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"NieRAutomata.exe"+213B9E</Address>
      <Comment>a2暴走
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"NieRAutomata.exe"+213BCA</Address>
      <Comment>hp &gt; 1 跳
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"NieRAutomata.exe"+213BEF</Address>
      <Comment>hp = 1
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"NieRAutomata.exe"+3276AF</Address>
      <Comment>入侵敌人减血
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"NieRAutomata.exe"+5DCF70</Address>
      <Comment>eax &gt; 455
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"NieRAutomata.exe"+5DCF77</Address>
      <Comment>eax &gt; 255
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"NieRAutomata.exe"+5DCF7E</Address>
      <Comment>eax == 0
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"NieRAutomata.exe"+5DCF85</Address>
      <Comment>跳
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"NieRAutomata.exe"+5DCFB9</Address>
      <Comment>rcx == edx 跳
edx = 270
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"NieRAutomata.exe"+5DCFBF</Address>
      <Comment>eax &lt; 456 跳
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"NieRAutomata.exe"+5DCFD0</Address>
      <Comment>材料的 丢弃 使用 访问 函数
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"NieRAutomata.exe"+5DCFD9</Address>
      <Comment>给出rax赋值了
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"NieRAutomata.exe"+5DCFE9</Address>
      <Comment>rax在这个函数改变了
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"NieRAutomata.exe"+5DCFF6</Address>
      <Comment>消耗材料，有符号位
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"NieRAutomata.exe"+5DCFFA</Address>
      <Comment>if 材料数量&gt;0 跳
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"NieRAutomata.exe"+5DD007</Address>
      <Comment>清空材料代码
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"NieRAutomata.exe"+5DD01C</Address>
      <Comment>eax = 99 在这个函数中赋值了
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"NieRAutomata.exe"+5DD021</Address>
      <Comment>eax(材料上限) == 99
if [rbx+08] &lt;= 99
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"NieRAutomata.exe"+5DD026</Address>
      <Comment>固定为99
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"NieRAutomata.exe"+5DD03F</Address>
      <Comment>函数返回值
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"NieRAutomata.exe"+5DEA00</Address>
      <Comment>材料上限
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"NieRAutomata.exe"+7EA790</Address>
      <Comment>ecx &gt;=1c8(456) 跳 
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"NieRAutomata.exe"+7EA798</Address>
      <Comment>ecx &gt; FF(255) 就跳
</Comment>
    </DisassemblerComment>
  </DisassemblerComments>
</CheatTable>
